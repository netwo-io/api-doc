/**
 * NetwoEligibilityAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of EligibilityProductResult
 */
class EligibilityProductResult extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.contractVersionId =
          this.constructor.getValue(obj.contractVersionId
     || obj.contract_version_id);
        this.eligibilityId = this.constructor.getValue(obj.eligibilityId || obj.eligibility_id);
        this.entities = this.constructor.getValue(obj.entities);
        this.infrastructureType =
          this.constructor.getValue(obj.infrastructureType
     || obj.infrastructure_type);
        this.productId = this.constructor.getValue(obj.productId || obj.product_id);
        this.productName = this.constructor.getValue(obj.productName || obj.product_name);
        this.relations = this.constructor.getValue(obj.relations);
        this.resolver = this.constructor.getValue(obj.resolver);
        this.varyingProductFeatures =
          this.constructor.getValue(obj.varyingProductFeatures
     || obj.varying_product_features);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'contractVersionId', realName: 'contract_version_id' },
            { name: 'eligibilityId', realName: 'eligibility_id' },
            { name: 'entities', realName: 'entities', array: true, type: 'Entity' },
            { name: 'infrastructureType', realName: 'infrastructure_type' },
            { name: 'productId', realName: 'product_id' },
            { name: 'productName', realName: 'product_name' },
            { name: 'relations', realName: 'relations', array: true, type: 'Relation' },
            { name: 'resolver', realName: 'resolver' },
            { name: 'varyingProductFeatures', realName: 'varying_product_features', array: true },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = EligibilityProductResult;
