/**
 * NetwoEligibilityAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of Relation
 */
class Relation extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.accessFee = this.constructor.getValue(obj.accessFee || obj.access_fee);
        this.name = this.constructor.getValue(obj.name);
        this.productId = this.constructor.getValue(obj.productId || obj.product_id);
        this.recurringPrice = this.constructor.getValue(obj.recurringPrice || obj.recurring_price);
        this.type = this.constructor.getValue(obj.type);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'accessFee', realName: 'access_fee' },
            { name: 'name', realName: 'name' },
            { name: 'productId', realName: 'product_id' },
            { name: 'recurringPrice', realName: 'recurring_price' },
            { name: 'type', realName: 'type' },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = Relation;
