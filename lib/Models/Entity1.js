/**
 * NetwoEligibilityAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of Entity1
 */
class Entity1 extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.accessFee = this.constructor.getValue(obj.accessFee || obj.access_fee);
        this.commitmentDuration =
          this.constructor.getValue(obj.commitmentDuration
     || obj.commitment_duration);
        this.debit = this.constructor.getValue(obj.debit);
        this.entityId = this.constructor.getValue(obj.entityId || obj.entity_id);
        this.interventionTimeGuaranteedApplicability =
          this.constructor.getValue(obj.interventionTimeGuaranteedApplicability
     || obj.intervention_time_guaranteed_applicability);
        this.interventionTimeGuaranteedDelay =
          this.constructor.getValue(obj.interventionTimeGuaranteedDelay
     || obj.intervention_time_guaranteed_delay);
        this.name = this.constructor.getValue(obj.name);
        this.preferredOffer = this.constructor.getValue(obj.preferredOffer || obj.preferred_offer);
        this.recoveryTimeGuaranteedApplicability =
          this.constructor.getValue(obj.recoveryTimeGuaranteedApplicability
     || obj.recovery_time_guaranteed_applicability);
        this.recoveryTimeGuaranteedDelay =
          this.constructor.getValue(obj.recoveryTimeGuaranteedDelay
     || obj.recovery_time_guaranteed_delay);
        this.recurringPrice = this.constructor.getValue(obj.recurringPrice || obj.recurring_price);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'accessFee', realName: 'access_fee' },
            { name: 'commitmentDuration', realName: 'commitment_duration' },
            { name: 'debit', realName: 'debit' },
            { name: 'entityId', realName: 'entity_id' },
            {
                name: 'interventionTimeGuaranteedApplicability',
                realName: 'intervention_time_guaranteed_applicability',
            },
            {
                name: 'interventionTimeGuaranteedDelay',
                realName: 'intervention_time_guaranteed_delay',
            },
            { name: 'name', realName: 'name' },
            { name: 'preferredOffer', realName: 'preferred_offer' },
            {
                name: 'recoveryTimeGuaranteedApplicability',
                realName: 'recovery_time_guaranteed_applicability',
            },
            { name: 'recoveryTimeGuaranteedDelay', realName: 'recovery_time_guaranteed_delay' },
            { name: 'recurringPrice', realName: 'recurring_price' },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = Entity1;
